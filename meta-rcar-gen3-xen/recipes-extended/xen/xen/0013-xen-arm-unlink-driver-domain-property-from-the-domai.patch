From 1aaa8db400204b8920a98fa36af1899216bc6f26 Mon Sep 17 00:00:00 2001
From: Oleksandr Dmytryshyn <oleksandr.dmytryshyn@globallogic.com>
Date: Wed, 2 Mar 2016 20:05:13 +0200
Subject: [PATCH 2/5] xen/arm: unlink driver domain property from the domain id

Now driver domain can be mapped 1:1 using xsm permissions.

Change-Id: I36e026aeaa4a1003bde80c91ed2b95f6ccead39c
Signed-off-by: Oleksandr Dmytryshyn <oleksandr.dmytryshyn@globallogic.com>
Signed-off-by: Iurii Konovalenko <iurii.konovalenko@globallogic.com>
---
 xen/common/domctl.c          | 10 ++++++++++
 xen/include/asm-arm/domain.h |  2 +-
 xen/include/xen/sched.h      |  7 +++++++
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/xen/common/domctl.c b/xen/common/domctl.c
index e43904e..09e174a 100644
--- a/xen/common/domctl.c
+++ b/xen/common/domctl.c
@@ -609,6 +609,16 @@ long do_domctl(XEN_GUEST_HANDLE_PARAM(xen_domctl_t) u_domctl)
 
         ret = 0;
 
+        /*
+         * Check is domain should be 1:1 mapped (in this case
+         * this we'll set this domain as privelleged
+         */
+        if ( !xsm_domctl(XSM_HOOK, d, XEN_DOMCTL_set_11_mapping) )
+        {
+            d->is_privileged = true;
+            d->is_allowed_11_mapping = true;
+        }
+
         memcpy(d->handle, op->u.createdomain.handle,
                sizeof(xen_domain_handle_t));
 
diff --git a/xen/include/asm-arm/domain.h b/xen/include/asm-arm/domain.h
index 370cdeb..01a93f6 100644
--- a/xen/include/asm-arm/domain.h
+++ b/xen/include/asm-arm/domain.h
@@ -30,7 +30,7 @@ enum domain_type {
 #endif
 
 extern int dom0_11_mapping;
-#define is_domain_direct_mapped(d) ((d) == hardware_domain && dom0_11_mapping)
+#define is_domain_direct_mapped(d) (((d) == hardware_domain && dom0_11_mapping) || is_domain_allowed_11_map(d))
 
 struct vtimer {
         struct vcpu *v;
diff --git a/xen/include/xen/sched.h b/xen/include/xen/sched.h
index fe15e9c..da690ca 100644
--- a/xen/include/xen/sched.h
+++ b/xen/include/xen/sched.h
@@ -386,6 +386,10 @@ struct domain
     bool_t           disable_migrate;
     /* Is this guest being debugged by dom0? */
     bool_t           debugger_attached;
+    /* Is 1:1 memory mapping allowed */
+    bool_t           is_allowed_11_mapping;
+    /* Is 1:1 memory allocated for this domain? */
+    bool_t           is_11_mem_allocated;
     /* Which guest this guest has privileges on */
     struct domain   *target;
 
@@ -842,6 +846,9 @@ void watchdog_domain_destroy(struct domain *d);
 /* This check is for functionality specific to a control domain */
 #define is_control_domain(_d) ((_d)->is_privileged)
 
+/* This check is for is allowed 1:1 mapping for domain */
+#define is_domain_allowed_11_map(_d) ((_d)->is_allowed_11_mapping)
+
 #define VM_ASSIST(d, t) (test_bit(VMASST_TYPE_ ## t, &(d)->vm_assist))
 
 #define is_pv_domain(d) ((d)->guest_type == guest_type_pv)
-- 
1.9.1

